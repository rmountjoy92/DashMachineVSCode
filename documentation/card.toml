[Card]
#card.shared_card
shared_card.type = 'string'
shared_card.description = 'Optionally specify if this card is from shared_cards.toml. If so, this is the option this entry will use.'

# card.tags
tags.type = 'list<string>'
tags.description = 'The searchable tags for this card'

# card.onpress
onpress.type = 'Onpress'

# card.card
card.type = 'dict'
card.description = 'Modify aspects of the this card on the dashboard'
card.alignment.type = 'string'
card.alignment.description = 'The alignment for the entire card. Options are right,center,left.'
card.color.type = 'color'
card.color.description = 'Card background color'
card.border-radius.type = 'size'
card.border-radius.description = 'Card border radius'
card.zdepth.type = 'int'
card.zdepth.description = 'The amount of shadow behind the card options are: 1,2,3,4,5'
card.classes.type = 'classes'
card.css.type = 'css'

# card.icon
icon.type = 'Image or dict'
icon.description = 'This section contains an image at the top of the card.'
icon.image.type = 'Image'
icon.image.description = 'The image to use for the icon object'
icon.height.type = 'size'
icon.height.description = 'The height of the icon image'
icon.onpress.type = 'Onpress'
icon.classes.type = 'classes'
icon.css.type = 'css'

# card.title
title.type = 'string or dict'
title.description = 'This section contains text that is below the icon (if present) on the card.'
title.text.type = 'string'
title.text.description = 'The string content for the title object'
title.onpress.type = 'Onpress'
title.classes.type = 'classes'
title.css.type = 'css'

# card.description
description.type = 'string or dict'
description.description = 'This section contains gray text that is below the title (if present) on the card.'
description.text.type = 'string'
description.text.description = 'The string content for the description object'
description.width.type = 'size'
description.width.description = 'The max width of the description block'
description.onpress.type = 'Onpress'
description.classes.type = 'classes'
description.css.type = 'css'

# card.list
list.type = 'dict'
list.description = 'This section is an area below the description (if present). In this section you can create a list of items with an icon, a title, and onpress action'
list.items.type = 'list<ListItem>'
list.items.description = 'List of ListItem object to populate the list'
list.alignment.type = 'string'
list.alignment.description = 'How to align the items on the list (right, left, center)'
list.classes.type = 'classes'
list.css.type = 'css'

# card.data_sources
data_sources.type = 'dict'
data_sources.description = 'This section is an area below the list (if present) on the card for loading in information from data sources configured in your data-sources.toml file'
data_sources.sources.type = 'list<string>'
data_sources.sources.description = 'List of data source names from configured data sources in you data_sources.toml file'
data_sources.hide_reload.type = 'bool'
data_sources.hide_reload.description = 'Hide reload button on the bottom of the data source container'
data_sources.collection.type = 'dict'
data_sources.collection.description = 'Modify aspects of the data source parent container'
data_sources.collection.css.type = 'css'
data_sources.collection.classes.type = 'classes'
data_sources.onpress.type = 'Onpress'
data_sources.classes.type = 'classes'
data_sources.css.type = 'css'

#card.content
content.type = 'dict'
content.description = 'This section is an area below the data_source (if present) on the card for displaying custom content. Currently supported formats are .md and jinja2 .html'
content.markdown.type = 'string'
content.markdown.description = 'The path to the markdown file in your assets folder to convert to html and display on this card'
content.html.type = 'string'
content.html.description = 'The path to the html (jinja 2 template) file in your assets folder to convert to render and display on this card'
content.alignment.type = 'string'
content.alignment.description = 'How to align the content, options are center,right,left'

# card.actionbar
actionbar.type = 'dict'
actionbar.description = 'The bar at the bottom of the card with configurable buttons'
actionbar.actions.type = 'list<Action>'
actionbar.actions.description = 'List of Action objects to populate the actionbar'
actionbar.classes.type = 'classes'
actionbar.css.type = 'css'

